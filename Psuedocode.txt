pseudo-code for UNO:
public variable countModifier = 1;
start of game:
	get number of players;
	give each player 7 random cards;
	put remaining cards in stack;
	setup playerOrder;
variables: //to make your lives easier.

enum cardType {numberCard, Skip, DrawTwo, Reverse, Wild, WildDrawFour}
class Card
{
	cardType type;
	int value = 0;
};
class Player
{
	 vector<Card> cardset;
	 int score;
};
Player[] players;
Card topCard;

do
{
	for(int whoNeedsToPlay = players.length; whoNeedsToPlay > 0 && whoNeedsToPlay < players.length + 1; whoNeedsToPlay -= 1)
	{
		for(int currentCard = 0; amountOfCardsPlayerHas > currentCard; currentCard++)
		{
			if(players[whoNeedsToPlay].cardset[currentCard])
			{
				card's score++;
				if(card.cardType != cardType.numberCard)
					card's score++;
					if(card.cardType == cardType.WildDrawFour)
						card's score++;
			}
		}
		if(they have a card with a score of more than zero)
		{
			topCard = card with highest score;
			switch(cardType)
			{
				case numberCard;
					break;
				case Skip:
					countModifier--;
					break;
				case DrawTwo:
					player who is next in whoNeedsToPlay index needs to take 2 cards from the stack;
					break;
				case Reverse:
					countModifier *= -1;
					break;
				case Wild:					
					topCard.color = playerInput;
					break;
				case wildDrawFour;
					player who is next in whoNeedsToPlay index takes 4 cards;
					topCard.color = playerInput;
					break;
			}
		}
		else {
			player takes card from stack;
			for(int currentPlayer = 0; players.length > currentPlayer; currentPlayer++)
			{
				currentPlayer.score = 0; // we need to reset the score now for the calculations to work correctly
	 			foreach(card in player's cards)
				{
					if(currentCard is a numbered card)
						currentPlayer.score += card's value;
					else
						currentPlayer.score += 20;
				}
			}
			//by this point, all scores were already calculated
		}
}while(no one has a score that is more than or equal to 500)
